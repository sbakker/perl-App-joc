#!/usr/bin/perl

#############################################################################

=head1 NAME

getx509certificate - get the X.509 SSL certificate for a host

=head1 SYNOPSIS

B<getx509certificate> I<host>[:I<port>] I<outfile>

=head1 DESCRIPTION

C<getx509certificate> connects to I<host> on port I<port> (443 by
default), and saves the X.509 in PEM and DER format to
I<outfile>B<.pem> and I<outfile>B<.der>, respectively.

=head1 SEE ALSO

L<openssl(1)>, L<x509(1)>, L<s_client(1)>.

=cut

#############################################################################

use strict;
use warnings;
use FindBin;
use IPC::Run qw( run );

$| = 1;

if (@ARGV != 2) {
    die "usage: $FindBin::Script <host>[:<port>] <output-file>\n";
}

my ($host, $outfile) = @ARGV;

($host, my $port) = split(/:/, $host, 2);
$port ||= 443;


############################################################################
# Use "s_client" to connect to the host and fetch the certificate.

print "Connecting to $host on port $port: ";

run [ qw(openssl s_client -connect), "$host:$port" ],
    '<', \'',
    '>', \(my $out),
    '2>', \(my $err);

if ($? != 0) {
    print "FAIL\n";
    chomp($err);
    die "$err\n",
        "** FATAL: openssl s_client exited with code ", $?>>8, "\n";
}

print "OK\n";

############################################################################
# Extract PEM certificate from s_client output.

print "Extracting PEM certificate: ";

my $pem_cert;

if ($out =~ m{\n(-+BEGIN CERTIFICATE-+\n.*\n-+END CERTIFICATE-+\n)}s) {
    $pem_cert = $1;
}
else {
    chomp($out);
    print "FAIL\n";
    die "** ERROR: no certificate information in openssl s_client output:\n",
        "---\n$out\n---\n",
        "** FATAL: cannot continue\n";
}

print "OK\nSaving PEM certificate: ";

if (open my $fh, '>', "$outfile.pem") {
    print $fh $pem_cert, "\n";
}
else {
    print "FAIL\n";
    die "$FindBin::Script: cannot write to $outfile.pem: $!\n";
}

print "OK\n";

############################################################################
# Use "x509" to convert PEM to DER and save it.

print "Generating DER certificate:";

$out = $err = '';
run [ 'openssl', 'x509',
        -in      => "$outfile.pem",
        -outform => 'der',
        -out     => "$outfile.der"
    ],
    '<', \'',
    '>', \$out,
    '2>', \$err;

if ($? != 0) {
    print "FAIL\n";
    chomp($err);
    die "$err\n",
        "** FATAL: openssl x509 exited with code ", $?>>8, "\n";
}

print "OK\n";

############################################################################
# Victory!

print "==> Output is in $outfile.pem and $outfile.der\n";

exit 0;

__END__

=head1 AUTHOR

Steven Bakker C<< <sb AT monkey-mind DOT net> >>

=head1 COPYRIGHT AND LICENCE

Copyright 2016, Steven Bakker C<< <sb AT monkey-mind DOT net> >>.

This is free software; you can redistribute it and/or modify it under the
same terms as the Perl 5 programming language system itself.
