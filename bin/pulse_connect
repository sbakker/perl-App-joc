#!/bin/bash
#
# pulse_connect - use Juniper Pulse client combined with "joc" configuration
#
# 26.jul.2016 - sb - created
#
# See POD at end.
#

[[ -n $DEBUG ]] && debug_cmd=echo

config=default

if [[ $# = 1 ]]; then
    config=$1
    shift;
fi

if [[ $# -gt 0 ]]; then
    echo "usage: ${0##*/} [config]" >&2
    exit 1
fi

joc_dir=$HOME/.joc
config=$joc_dir/config/default.yml

cd $joc_dir || exit 1

get_cfg () {
    local key=$1
    # Oooh, that's dirty!
    perl -MYAML::AppConfig -E '
        my ($file, $key) = @ARGV;
        my $cf = YAML::AppConfig->new;
        while (my ($k,$v) = each %ENV) {
            $cf->set($k, $v);
        }
        $cf->set("APP_DIR", "$ENV{HOME}/.joc");
        $cf->set("CONFIG_DIR", "$ENV{HOME}/.joc/config");
        $cf->merge(file => $file);
        my $v = $cf->get($key);
        if (ref $v) { say "@$v" }
        else { say $v }
    ' \
    $config $key
}

url=$(get_cfg url)
host=$(get_cfg url | cut -f3 -d/)
cert=$(get_cfg der_certificate)
realm=$(get_cfg realm)
password=$(get_cfg password)

user=$(get_cfg user)
user=${user:-$USER}
user=${user:-$LOGNAME}

pulsesvc=$(get_cfg pulsesvc)
pulsesvc=${pulsesvc:-/usr/local/pulse/pulsesvc}

if [[ ! -f $cert ]]; then
    base=${cert%.der}
    getx509certificate $host $base || exit 1
fi

echo "$password" | $debug_cmd /usr/local/pulse/pulsesvc -C \
    -h "$host" \
    -u "$user" \
    -f "$joc_dir/$cert" \
    -U "$url" \
    -r "$realm"

exit 0

POD=<<'EOF'

=head1 NAME

pulse_connect - use Juniper Pulse client combined with "joc" configuration

=head1 SYNOPSIS

[B<DEBUG=1>] B<pulse_connect> [I<configuration>]

=head1 DESCRIPTION

Set up VPN connections using the configuration that L<joc(1)> uses.

B<NOTE:> This only uses the credentials and certificates from the
L<joc(1)> configuration, i.e. it does not set up any exclusion routes.

=head1 CONFIGURATION

The following configuration keys are used. Keys marked with an asterisk (B<*>)
are mandatory.

=over

=item C<der_certificate> (B<*>)

File containing the server certificate in DER format.

IF the file does not exist, the script calls L<getx509certificate(1)>
to fetch it.

=item C<password> (B<*>)

User's password.

=item C<pulsesvc>

The Juniper Pulse binary to execute. Default is C</usr/local/pulse/pulsesvc>.

=item C<realm> (B<*>)

Realm parameter of the VPN service.

=item C<url> (B<*>)

URL to connect to.

=item C<user>

Login name for the VPN user. If not set, it will default to
the current user name.

=back

=head1 SEE ALSO

L<getx509certificate(1p)>,
L<joc(1p)>.

=head1 AUTHOR

Steven Bakker C<< <sb AT monkey-mind DOT net> >>.

=head1 COPYRIGHT AND LICENCE

Copyright 2016, Steven Bakker C<< <sb AT monkey-mind DOT net> >>.

This is free software; you can redistribute it and/or modify it under the
same terms as the Perl 5 programming language system itself.

=cut

EOF
